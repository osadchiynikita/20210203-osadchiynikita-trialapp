{"version":3,"sources":["components/UserInfo/UserInfo.module.scss","components/UserForm/UserForm.module.scss","components/UserOutput/ProductsTable/ProductsTable.module.scss","components/UserOutput/UserOutput.module.scss","components/UserOutput/ProductsChart/ProductsChart.module.scss","components/App/App.module.scss","components/UserOutput/InfoItem/InfoItem.module.scss","components/UserForm/validation.ts","components/common/Dropzone/Dropzone.tsx","components/UserForm/InputCSV/InputCSV.tsx","components/UserForm/UserForm.tsx","components/UserOutput/InfoItem/InfoItem.tsx","components/UserOutput/ProductsTable/ProductsTable.tsx","components/UserOutput/ProductsChart/ProductsChart.tsx","components/UserOutput/UserOutput.tsx","components/UserInfo/UserInfo.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","required","value","undefined","Dropzone","onDrop","multiple","accept","children","useDropzone","getRootProps","getInputProps","onClick","InputCSV","onChange","showConfirm","useCallback","result","Modal","confirm","title","content","onOk","acceptedFiles","forEach","file","reader","FileReader","onabort","message","error","onerror","onload","success","readAsText","gutter","span","readOnly","placeholder","Option","Select","Title","Typography","UserForm","onFormSave","initialValues","onSubmit","values","render","handleSubmit","submitting","invalid","noValidate","autoComplete","className","styles","formSection","level","Item","label","name","validate","input","showSearch","type","justify","htmlType","disabled","InfoItem","item","ProductsTable","data","columns","useMemo","dataIndex","key","align","container","header","main","dataSource","bordered","rowKey","ProductsChart","useState","chartData","setChartData","convertToChartData","raw","convertedData","reduce","acc","Product","Price","labels","prices","useEffect","datasets","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","UserOutput","formData","productsData","setProductsData","gender","age","email","country","city","fileData","parseData","a","csvtojson","fromString","console","catch","warn","section","UserInfoContent","selectedTab","UserInfo","setSelectedTab","setFormData","onTabChange","target","Group","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.407d4ef4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserInfo_container__1KG0K\",\"header\":\"UserInfo_header__6ZNWX\",\"content\":\"UserInfo_content__2Ckm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"UserForm_formSection__3TmyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductsTable_container__35A37\",\"header\":\"ProductsTable_header__iH8tg\",\"main\":\"ProductsTable_main__1sHU2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"UserOutput_section__1894f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductsChart_container__jWpWw\",\"header\":\"ProductsChart_header__1Vzwz\",\"main\":\"ProductsChart_main__3l8h5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2i36C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"InfoItem_item__12EX_\"};","export const required = (value: string) => (value ? undefined : 'Required');\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\n\ninterface IRenderProps {\n  onClick?: (event: React.SyntheticEvent) => void;\n}\n\ninterface IProps {\n  onDrop?: (files: any[]) => void;\n  children: (props: IRenderProps) => void;\n  multiple?: boolean;\n  accept?: string | string[];\n}\n\nconst Dropzone: React.FC<IProps> = ({ onDrop, multiple, accept, children }) => {\n  const { getRootProps, getInputProps } = useDropzone({ onDrop, multiple, accept });\n  const { onClick } = getRootProps();\n\n  return (\n    <>\n      <input {...getInputProps()} multiple={false} />\n      {children({ onClick })}\n    </>\n  );\n};\n\nexport default Dropzone;\n","import React, { useCallback } from 'react';\nimport { Button, Col, Input, message, Modal, Row } from 'antd';\nimport Dropzone from 'components/common/Dropzone';\n\ninterface IProps {\n  value: string;\n  onChange: (value: any) => void;\n}\n\nconst InputCSV: React.FC<IProps> = ({ value, onChange }) => {\n  const showConfirm = useCallback(\n    (result: any) => {\n      Modal.confirm({\n        title: 'Are you sure?',\n        content: 'This field is already contains data, do you want to replace?',\n        onOk() {\n          onChange(result);\n        }\n      });\n    },\n    [onChange]\n  );\n\n  const onDrop = useCallback(\n    acceptedFiles => {\n      acceptedFiles.forEach((file: any) => {\n        const reader = new FileReader();\n\n        reader.onabort = () => message.error('file reading was aborted');\n        reader.onerror = () => message.error('file reading has failed');\n        reader.onload = () => {\n          message.success('File uploaded');\n\n          return value ? showConfirm(reader.result) : onChange(reader.result);\n        };\n\n        reader.readAsText(file);\n      });\n    },\n    [onChange, showConfirm, value]\n  );\n\n  return (\n    <Row gutter={24}>\n      <Col span={20}>\n        <Input readOnly placeholder={'Upload file...'} value={value} />\n      </Col>\n\n      <Col span={4}>\n        <Dropzone onDrop={onDrop} multiple={false} accept=\"text/csv\">\n          {({ onClick }) => <Button onClick={onClick}>Upload</Button>}\n        </Dropzone>\n      </Col>\n    </Row>\n  );\n};\n\nexport default InputCSV;\n","import React from 'react';\nimport { Field, Form } from 'react-final-form';\nimport { Row, Col, Button, Input, Select, Form as AntForm, Typography } from 'antd';\nimport { required } from './validation';\nimport styles from './UserForm.module.scss';\n\nimport InputCSV from './InputCSV';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\ninterface IProps {\n  onFormSave: (values: any) => void;\n  initialValues?: Record<string, any>;\n}\n\nconst UserForm: React.FC<IProps> = ({ onFormSave, initialValues }) => {\n  const onSubmit = (values: any) => onFormSave(values);\n\n  return (\n    <div>\n      <Form\n        onSubmit={onSubmit}\n        initialValues={initialValues}\n        render={({ handleSubmit, submitting, invalid }) => {\n          return (\n            <>\n              <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                <div className={styles.formSection}>\n                  <Title level={4}>User</Title>\n\n                  <Row gutter={24}>\n                    <Col span={12}>\n                      <AntForm.Item label={'Name'}>\n                        <Field name=\"name\" validate={required} render={({ input }) => <Input {...input} />} />\n                      </AntForm.Item>\n                    </Col>\n                    <Col span={6}>\n                      <AntForm.Item label={'Gender'}>\n                        <Field\n                          name=\"gender\"\n                          validate={required}\n                          render={({ input }) => (\n                            <Select showSearch {...input}>\n                              <Option value=\"male\">Male</Option>\n                              <Option value=\"female\">Female</Option>\n                              <Option value=\"unspecified\">Unspecified</Option>\n                            </Select>\n                          )}\n                        />\n                      </AntForm.Item>\n                    </Col>\n                    <Col span={6}>\n                      <AntForm.Item label={'Age'}>\n                        <Field name=\"age\" validate={required} render={({ input }) => <Input {...input} />} />\n                      </AntForm.Item>\n                    </Col>\n                  </Row>\n\n                  <Row gutter={24}>\n                    <Col span={12}>\n                      <AntForm.Item label={'Email'}>\n                        <Field\n                          name=\"email\"\n                          validate={required}\n                          render={({ input }) => <Input {...input} type=\"email\" />}\n                        />\n                      </AntForm.Item>\n                    </Col>\n                    <Col span={6}>\n                      <AntForm.Item label={'Country'}>\n                        <Field name=\"country\" validate={required} render={({ input }) => <Input {...input} />} />\n                      </AntForm.Item>\n                    </Col>\n                    <Col span={6}>\n                      <AntForm.Item label={'City'}>\n                        <Field name=\"city\" validate={required} render={({ input }) => <Input {...input} />} />\n                      </AntForm.Item>\n                    </Col>\n                  </Row>\n                </div>\n\n                <div className={styles.formSection}>\n                  <Title level={4}>Input CSV Data</Title>\n                  <Field name=\"fileData\" validate={required} render={({ input }) => <InputCSV {...input} />} />\n                </div>\n\n                <div className={styles.formSection}>\n                  <Row justify={'center'}>\n                    <Button htmlType={'submit'} type={'primary'} disabled={submitting || invalid}>\n                      Continue\n                    </Button>\n                  </Row>\n                </div>\n              </form>\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport styles from './InfoItem.module.scss';\n\ninterface IProps {\n  label: string;\n  children: React.ReactNode;\n}\n\nconst InfoItem: React.FC<IProps> = ({ label, children }) => {\n  return (\n    <div className={styles.item}>\n      <label>{label}:</label>\n      <span>{children || 'Not specified'}</span>\n    </div>\n  );\n};\n\nexport default InfoItem;\n","import React, { useMemo } from 'react';\nimport { Table } from 'antd';\nimport styles from './ProductsTable.module.scss';\n\ninterface IProps {\n  data: Record<string, any>[];\n}\n\nconst ProductsTable: React.FC<IProps> = ({ data }) => {\n  const columns: any = useMemo(\n    () => [\n      {\n        title: 'Product',\n        dataIndex: 'Product',\n        key: 'Product'\n      },\n      {\n        title: 'Price',\n        dataIndex: 'Price',\n        key: 'Price',\n        align: 'right'\n      }\n    ],\n    []\n  );\n\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>\n        <label>Data</label>\n      </header>\n\n      {data ? (\n        <main className={styles.main}>\n          <Table dataSource={data} columns={columns} bordered rowKey={'Product'} />\n        </main>\n      ) : (\n        'File is not uploaded'\n      )}\n    </div>\n  );\n};\n\nexport default ProductsTable;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport styles from './ProductsChart.module.scss';\n\ninterface IProps {\n  data: Record<string, any>[];\n}\n\nconst ProductsChart: React.FC<IProps> = ({ data }) => {\n  const [chartData, setChartData] = useState<any>(null);\n\n  const convertToChartData = useCallback(raw => {\n    const convertedData = raw.reduce(\n      (acc: any, { Product, Price }: any) => {\n        return {\n          ...acc,\n          labels: [...acc.labels, Product],\n          prices: [...acc.prices, Price]\n        };\n      },\n      { labels: [], prices: [] }\n    );\n\n    setChartData(convertedData);\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      convertToChartData(data);\n    }\n  }, [data, convertToChartData]);\n\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>\n        <label>Graph</label>\n      </header>\n\n      {chartData ? (\n        <Bar\n          data={{\n            labels: chartData.labels,\n            datasets: [\n              {\n                label: 'Product Prices',\n                data: chartData.prices,\n                backgroundColor: [\n                  // TODO: Generate colors programmatically\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)'\n                ],\n                borderColor: [\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)'\n                ],\n                borderWidth: 1\n              }\n            ]\n          }}\n          options={{\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }\n              ]\n            }\n          }}\n        />\n      ) : (\n        'No data'\n      )}\n    </div>\n  );\n};\n\nexport default ProductsChart;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport csvtojson from 'csvtojson';\nimport { Typography, Row, Col, message } from 'antd';\nimport styles from './UserOutput.module.scss';\n\nimport InfoItem from './InfoItem';\nimport ProductsTable from './ProductsTable';\nimport ProductsChart from './ProductsChart';\n\nconst { Title } = Typography;\n\ninterface IProps {\n  formData: any;\n}\n\nconst UserOutput: React.FC<IProps> = ({ formData }) => {\n  const [productsData, setProductsData] = useState<any>(null);\n  const { name, gender, age, email, country, city, fileData } = formData;\n\n  const parseData = useCallback(async () => {\n    try {\n      const data: any = await csvtojson().fromString(fileData);\n      setProductsData(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [fileData]);\n\n  useEffect(() => {\n    if (fileData) {\n      parseData().catch(() => message.warn('Something went wrong'));\n    }\n  }, [fileData, parseData]);\n\n  return (\n    <>\n      <Title level={4}>Personal Information</Title>\n\n      <div className={styles.section}>\n        <Row gutter={48}>\n          <Col span={12}>\n            <InfoItem label={'Name'}>{name}</InfoItem>\n            <InfoItem label={'Gender'}>{gender}</InfoItem>\n            <InfoItem label={'Age'}>{age}</InfoItem>\n          </Col>\n\n          <Col span={12}>\n            <InfoItem label={'Email'}>{email}</InfoItem>\n            <InfoItem label={'Country'}>{country}</InfoItem>\n            <InfoItem label={'City'}>{city}</InfoItem>\n          </Col>\n        </Row>\n      </div>\n\n      <div className={styles.section}>\n        <Row gutter={48}>\n          <Col span={12}>\n            <ProductsTable data={productsData} />\n          </Col>\n\n          <Col span={12}>\n            <ProductsChart data={productsData} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default UserOutput;\n","import React, { useState, useCallback } from 'react';\nimport { Radio } from 'antd';\nimport styles from './UserInfo.module.scss';\n\nimport UserForm from '../UserForm';\nimport UserOutput from '../UserOutput';\n\ninterface IUserInfoContentProps {\n  selectedTab: string;\n  onFormSave: (values: any) => void;\n  formData: any;\n}\n\nconst UserInfoContent: React.FC<IUserInfoContentProps> = ({ selectedTab, onFormSave, formData }) => {\n  switch (selectedTab) {\n    case 'input':\n      return <UserForm onFormSave={onFormSave} initialValues={formData} />;\n    case 'output':\n      return <UserOutput formData={formData} />;\n    default:\n      return <UserForm onFormSave={onFormSave} initialValues={formData} />;\n  }\n};\n\nconst UserInfo: React.FC<any> = () => {\n  const [selectedTab, setSelectedTab] = useState('input');\n  const [formData, setFormData] = useState({});\n\n  const onTabChange = useCallback(({ target }) => setSelectedTab(target.value), []);\n  const onFormSave = useCallback(values => {\n    setFormData(values);\n    setSelectedTab('output');\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>\n        <Radio.Group onChange={onTabChange} value={selectedTab}>\n          <Radio.Button value=\"input\">Input</Radio.Button>\n          <Radio.Button value=\"output\" disabled>\n            Output\n          </Radio.Button>\n        </Radio.Group>\n      </header>\n\n      <main className={styles.content}>\n        <UserInfoContent selectedTab={selectedTab} onFormSave={onFormSave} formData={formData} />\n      </main>\n    </div>\n  );\n};\n\nexport default UserInfo;\n","import React from 'react';\nimport styles from './App.module.scss';\n\nimport UserInfo from '../UserInfo';\n\nfunction App() {\n  return (\n    <div className={styles.container}>\n      <UserInfo />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}